<h3>Ophom Settings</h3>

Hue Bridge Status: <span id="ophom_generalstatus" class="badge badge-danger" style="background-color: #ff4b4b;">Not Linked</span>

<div style="margin-bottom: 25px;"></div>

 <!-- ###### BRIDGE PAIRING ###### -->
<div id="ophom_bridgenotlinked">
	<h4>Pairing to the Bridge</h4>
	<p>Click on the button below to start searching for your Philips Hue Bridge</p>
	<button id="ophom_searchbridgebutton" type="button" class="btn"><i class="fa fa-search"></i> Search my bridge</button>
	<br /><br />
	<span id="ophom_searchbridgestatus" style="display: none;"></span>
	<br />
	<div id="ophom_bridgefound" style="display: none;">
		<p>Click on "Start Pairing" button below and push the pairing button on your Bridge</p>
		<button id="ophom_pairingbridgebutton" class="btn"><i class="fa fa-link"></i> Start Pairing</button>
		<span id="ophom_pairingtrycount"></span>
		<br />
		<!-- <div class="controls">
			<input type="text" id="ophom_champtest" data-bind="value: settings.plugins.ophom.hue_token"/>
		</div> -->
		<img src="plugin/ophom/static/images/hue_pairing.png" />
	</div>
</div>

 <!-- ###### BRIDGE CONFIGURATION ###### -->
<div id="ophom_bridgenotconfigured" style="display: none;">
	<h4>Bridge Configuration</h4>
	<span id="ophom_configuringstatus">Retrieving your Hue devices....</span>
	<br />
	<select id="ophom_plugselection" style="display: none;">
		<option value="">Choose a plug...</option>
	</select>
	<br /><br />
	<button id="ophom_validplugselection" class="btn"><i class="fa fa-save"></i> Save Configuration</button>
</div>

<!-- #### AUTO OFF CONFIGURATION ####-->
<div id="ophom_autooffconfiguration" style="display: none;">
	<h4>Configuration</h4>

	<label class="checkbox" disabled>
		<input type="checkbox" value="" data-bind="checked: settings.plugins.ophom.auto_connect">
		Try to connect to printer after power On the plug ? (~5sec)
	</label>

	<br />

	<label class="checkbox" disabled>
		<input type="checkbox" value="" data-bind="checked: settings.plugins.ophom.auto_off">
		Power Off the plug after print successfull finish ?
	</label>
	Minimum temperature required for automatic shutdown:<br /><br />
	<div class="control-group disabled" data-bind="css: { disabled: !settings.plugins.ophom.auto_off }">
		
		<div class="input-append">
			<label class="control-label" for="nozzle">Nozzle:</label>
			<input class="span2 controls" id="nozzle" type="text" data-bind="value: settings.plugins.ophom.auto_off_nozzle_temp">
			<span class="add-on">C°</span>
		</div>

		<div class="input-append">
			<label class="control-label" for="bed">Bed:</label>
			<input class="span2" id="bed" type="text" data-bind="value: settings.plugins.ophom.auto_off_bed_temp">
			<span class="add-on">C°</span>
		</div>	
	</div>
</div>

<br /><br /><br /><br />
<a href='https://github.com/Salamafet/ophom/blob/master/docs/usb_avoid_power.md' target='_blank'>Follow this instruction if your USB plug is powering your motherboard print</a>

<script>

	var bridge_ip_address = "";
	var general_status = document.getElementById("ophom_generalstatus");

	// ## Vérification du statut actuel de la config
	fetch(API_BASEURL + "plugin/ophom?action=isconfigured").then(function(response) {
		response.json().then(function(data) {
			if(data['reponse'] == 1)
			{
				bridgeConfiguration();
			}
			else if (data['reponse'] == 2) {
				autOffConfiguration();
			}
		})
	});

	document.getElementById("ophom_searchbridgebutton").addEventListener('click', function() {
		var search_button = this
		search_button.innerHTML = '<i class="fa fa-search"></i> Searching...';
		search_button.disabled = true;
		document.getElementById("ophom_searchbridgestatus").style.display = "none";
		document.getElementById("ophom_bridgefound").style.display = "none";

		fetch(API_BASEURL + "plugin/ophom?action=discover").then(function(response) {
			response.json().then(function(data) {
				console.log(data);
				if(data.length == 0)
				{
					search_button.innerHTML = '<i class="fa fa-search"></i> Search my bridge';
					search_button.disabled = false;
					document.getElementById("ophom_searchbridgestatus").style.display = "";
					document.getElementById("ophom_searchbridgestatus").innerHTML = "<font color='red'>Unable to find your Hue Bridge. Are you on the same network ?</font>";
				}
				else
				{
					bridge_ip_address = data[0].internalipaddress;
					search_button.innerHTML = '<i class="fa fa-search"></i> Search my bridge';
					search_button.disabled = false;
					document.getElementById("ophom_searchbridgestatus").style.display = "";
					document.getElementById("ophom_searchbridgestatus").innerHTML = "<font color='green'>Brige found (<i>"+ data[0].internalipaddress+"</i>) !</font>";
					document.getElementById("ophom_bridgefound").style.display = "";
				}
			});
		});
	});

	document.getElementById("ophom_pairingbridgebutton").addEventListener('click', function() {
		var pairing_bridge_button= document.getElementById("ophom_pairingbridgebutton");
		pairing_bridge_button.innerHTML = '<i class="fa fa-link"></i> Pairing...';
		pairing_bridge_button.disabled = true;
		var pairing_try_count = 0;
		var text_pairing_count = document.getElementById("ophom_pairingtrycount");
		text_pairing_count.innerHTML = "Try count: " + pairing_try_count + "/30";
		document.getElementById("ophom_searchbridgebutton").disabled = true;
		var interval_pairing = setInterval(function() {
			pairing_try_count += 1;
			text_pairing_count.innerHTML = "Try count: " + pairing_try_count + "/30";
			fetch(API_BASEURL + "plugin/ophom", {
				method: "POST",
				body : JSON.stringify({command: "pairing", ip: bridge_ip_address}),
				headers: { 'Content-Type': 'application/json'}
			}).then(function(response) {
				response.json().then(function(data) {
					console.info(data.reponse);
					if(data.reponse == "success")
					{
						clearInterval(interval_pairing);
						text_pairing_count.innerHTML = "<font color='green'>Succesfull Pairing !</font>";
						bridgeConfiguration();
					}
				});
			});
			if(pairing_try_count == 30)
			{
				clearInterval(interval_pairing);
				pairing_bridge_button.innerHTML = '<i class="fa fa-link"></i> Start Pairing';
				pairing_bridge_button.disabled = false;
				text_pairing_count.innerHTML = "<font color='red'>Unable to pair. Please try again</font>";
				document.getElementById("ophom_searchbridgebutton").disabled = false;
			}
		}, 1000);
	});

	function bridgeConfiguration()
	{
		general_status.innerHTML = "Linked but not Configured";
		general_status.style.backgroundColor = "#ff8f4b";
		document.getElementById("ophom_bridgenotlinked").style.display = "none";
		document.getElementById("ophom_bridgenotconfigured").style.display = "";

		fetch(API_BASEURL + "plugin/ophom?action=pluglist").then(function(response) {
			response.json().then(function(data) {
				console.log(data);
				document.getElementById("ophom_configuringstatus").innerHTML = "Select a plug in the list bellow";
				var list_plug = document.getElementById("ophom_plugselection");
				data.forEach(element => {
					var option = document.createElement("option");
					option.text = element[1];
					option.value = element[0];
					list_plug.add(option);
				});
				list_plug.style.display = "";
			})
		})
	}

	document.getElementById("ophom_validplugselection").addEventListener('click', function() {
		var light_id = document.getElementById("ophom_plugselection").value;
		if(light_id != "")
		{
			fetch(API_BASEURL + "plugin/ophom", {
					method: "POST",
					body : JSON.stringify({command: "configuration", device_id: light_id}),
					headers: { 'Content-Type': 'application/json'}
				}).then(function(response) {
					response.json().then(function(data) {
						if(data.reponse == "success")
						{
							autOffConfiguration();
						}
					});
				});
		}
	});

	function autOffConfiguration()
	{
		general_status.innerHTML = "Linked and Configured";
		general_status.style.backgroundColor = "rgb(6, 202, 27)";
		document.getElementById("ophom_bridgenotlinked").style.display = "none";
		document.getElementById("ophom_bridgenotconfigured").style.display = "none";
		document.getElementById("ophom_autooffconfiguration").style.display = "";
	}
</script>